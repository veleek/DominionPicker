<Page x:Class="Ben.Dominion.ResultsViewer" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:componentModel="using:System.ComponentModel" 
      xmlns:controls="using:Ben.Controls"
      xmlns:dominionControls="using:Ben.Dominion.Controls"
      xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:system="using:System" 
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
      xmlns:behaviors="using:Ben.Dominion.Behaviors"
      xmlns:dominion="using:Ben.Dominion"
      xmlns:resources="using:Ben.Dominion.Resources"
      DataContext="{Binding MainView, RelativeSource={RelativeSource Self}}" 
      mc:Ignorable="d" 
      d:DesignHeight="696" d:DesignWidth="480" 
      xmlns:animation="using:Windows.UI.Xaml.Media.Animation">
  
  <Page.Transitions>
    <animation:TransitionCollection>
      <animation:NavigationThemeTransition>
        <animation:NavigationThemeTransition.DefaultNavigationTransitionInfo>
          <CommonNavigationTransitionInfo />
        </animation:NavigationThemeTransition.DefaultNavigationTransitionInfo>
      </animation:NavigationThemeTransition>
    </animation:TransitionCollection>
  </Page.Transitions>
  
  <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Grid.Resources>
      <CollectionViewSource x:Name="ResultViewSource" 
                            Source="{x:Bind MainView.Result.GroupedCards, Mode=OneWay}"
                            IsSourceGrouped="True" 
                            ItemsPath="Elements"/>
    </Grid.Resources>
    
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <TextBlock x:Name="PageTitle" 
               Text="{Binding Strings.Results_Title, Source={StaticResource LocalizedResources}}"
               Style="{StaticResource HeaderTextBlockStyle}" Margin="12,0,0,4" 
               TextWrapping="NoWrap"/>

    <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"
            Style="{StaticResource RoundButtonStyle}" Margin="12" Width="40" Height="40">
      <SymbolIcon Symbol="Help" Margin="1,0,-1,0" />
    </Button>

    <ScrollViewer Grid.Row="1" Margin="0">
      <StackPanel>
        <StackPanel Visibility="Collapsed">
          <!--Visibility="{Binding Configuration.ShowBasicCards, Converter={StaticResource BooleanToVisibilityConverter}}">-->
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Background="{StaticResource SystemControlForegroundChromeHighBrush}" Width="60" Height="60" HorizontalAlignment="Left">
              <!--OpacityMask="{Binding Source=hand, Converter={StaticResource ImageConverter}, ConverterParameter='/Images'}"-->
            </Border>
            <Image Source="../Images/coin.png" Stretch="Uniform" Width="40" Margin="10,0" />
          </StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <StackPanel.Resources>
              <Style x:Key="RadioRoundButton" TargetType="RadioButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="Padding" Value="8,6,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="GroupName" Value="NumPlayers" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                      <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="20"/>
                          <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="PointerOver">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseMediumBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                              <Storyboard>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterEllipse"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckOuterEllipse"/>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Indeterminate"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Height="32" VerticalAlignment="Top">
                          <Ellipse x:Name="OuterEllipse" Height="20" Stroke="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" UseLayoutRounding="False" Width="20"/>
                          <Ellipse x:Name="CheckOuterEllipse" Fill="{ThemeResource SystemControlHighlightTransparentBrush}" Height="20" Opacity="0" Stroke="{ThemeResource SystemControlHighlightAltAccentBrush}" StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" UseLayoutRounding="False" Width="20"/>
                          <Ellipse x:Name="CheckGlyph" Fill="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" Height="10" Opacity="0" UseLayoutRounding="False" Width="10"/>
                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </StackPanel.Resources>
            <Border Background="{StaticResource SystemControlForegroundChromeHighBrush}" Width="80" Margin="0,-0,0,-10" HorizontalAlignment="Left">
              <!--OpacityMask="{Binding Source=players.png, Converter={StaticResource ImageConverter}, ConverterParameter='/Images'}"-->
            </Border>
            <RadioButton GroupName="NumPlayers" Content="2" Style="{StaticResource RadioRoundButton}" Click="PlayersButton_Click" />
            <RadioButton GroupName="NumPlayers" Content="3" Style="{StaticResource RadioRoundButton}" Click="PlayersButton_Click" />
            <RadioButton GroupName="NumPlayers" Content="4" Style="{StaticResource RadioRoundButton}" Click="PlayersButton_Click" />
            <RadioButton GroupName="NumPlayers" Content="5" Style="{StaticResource RadioRoundButton}" Click="PlayersButton_Click" />
            <RadioButton GroupName="NumPlayers" Content="6" Style="{StaticResource RadioRoundButton}" Click="PlayersButton_Click" />
          </StackPanel>
        </StackPanel>

        <ListView ItemsSource="{x:Bind ResultViewSource.View, Mode=OneWay}" 
                  SelectionMode="None">
          <ListView.ItemTemplate>
            <DataTemplate x:DataType="dominion:Card">
              <toolkitControls:SlidableListItem MouseSlidingEnabled="True"
                                                IsRightCommandEnabled="{x:Bind Group.CanBeReplaced}" IsLeftCommandEnabled="False"
                                                RightBackground="Red" RightLabel="Replace"
                                                RightCommandRequested="SlidableListItem_RightCommandRequested"
                                                >
                <dominionControls:DominionCardControl Card="{x:Bind}">
                  <interactivity:Interaction.Behaviors>
                    <interactions:EventTriggerBehavior EventName="Tapped">
                      <interactions:EventTriggerBehavior.Actions>
                        <behaviors:PickerViewNavigateAction View="CardInfo" Parameter="{x:Bind}" />
                      </interactions:EventTriggerBehavior.Actions>
                    </interactions:EventTriggerBehavior>
                  </interactivity:Interaction.Behaviors>
                </dominionControls:DominionCardControl>
              </toolkitControls:SlidableListItem>
            </DataTemplate>
          </ListView.ItemTemplate>
          <ListView.GroupStyle>
            <GroupStyle HidesIfEmpty="True">
              <GroupStyle.HeaderContainerStyle>
                <Style TargetType="ListViewHeaderItem">
                  <Setter Property="HorizontalAlignment" Value="Stretch" />
                  <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
              </GroupStyle.HeaderContainerStyle>
              <GroupStyle.HeaderTemplate>
                <DataTemplate x:DataType="dominion:CardGrouping">
                  <TextBlock Text="{Binding Key, Mode=OneTime, Converter={StaticResource CardDataLocalizer}}" 
                       Style="{StaticResource SubtleTextBlockStyle}" 
                       TextAlignment="Left" VerticalAlignment="Bottom" Margin="0" />
                </DataTemplate>
              </GroupStyle.HeaderTemplate>
            </GroupStyle>
          </ListView.GroupStyle>
          <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
              <Setter Property="HorizontalAlignment" Value="Stretch" />
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
          </ListView.ItemContainerStyle>
        </ListView>

        <TextBlock Text="{Binding Strings.Results_ExtrasDesc, Source={StaticResource LocalizedResources}}" Margin="12,6,0,3" 
                   Visibility="{Binding Result.HasExtras, Converter={StaticResource IsValidToVisibilityConverter}}">
        </TextBlock>
        <ItemsControl x:Name="AdditionalStuffList" ItemsSource="{Binding Result.AdditionalStuff}" Margin="12,4,0,0" FontFamily="{StaticResource OptimusPrincepsSemiBold}" FontSize="33" />
      </StackPanel>
    </ScrollViewer>

  </Grid>

  <Page.BottomAppBar>
    <CommandBar>
      <AppBarButton Label="{Binding Strings.Results_Refresh, Source={StaticResource LocalizedResources}}" Click="Refresh_Click">
        <AppBarButton.Icon>
          <SymbolIcon Symbol="Sync" />
        </AppBarButton.Icon>
      </AppBarButton>

      <AppBarButton x:Name="SortButton" Label="{Binding Strings.Results_SortName, Source={StaticResource LocalizedResources}}" Click="Sort_Click">
        <AppBarButton.Icon>
          <SymbolIcon Symbol="Sort" />
        </AppBarButton.Icon>
      </AppBarButton>

      <AppBarButton Label="{Binding Strings.Results_Save, Source={StaticResource LocalizedResources}}" Click="AddFavorite_Click">
        <AppBarButton.Icon>
          <SymbolIcon Symbol="Save" />
        </AppBarButton.Icon>
      </AppBarButton>


      <CommandBar.SecondaryCommands>
        <AppBarButton Label="{Binding Strings.Menu_CardLookup, Source={StaticResource LocalizedResources}}">
          <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="Click">
              <behaviors:PickerViewNavigateAction View="CardLookup" />
            </interactions:EventTriggerBehavior>
          </interactivity:Interaction.Behaviors>
        </AppBarButton>

        <AppBarButton Label="{Binding Strings.Menu_BlackMarket, Source={StaticResource LocalizedResources}}">
          <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="Click">
              <behaviors:PickerViewNavigateAction View="BlackMarket" />
            </interactions:EventTriggerBehavior>
          </interactivity:Interaction.Behaviors>
        </AppBarButton>

        <AppBarButton Label="{Binding Strings.Menu_Settings, Source={StaticResource LocalizedResources}}">
          <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="Click">
              <behaviors:PickerViewNavigateAction View="Settings" />
            </interactions:EventTriggerBehavior>
          </interactivity:Interaction.Behaviors>
        </AppBarButton>

        <AppBarButton Label="{Binding Strings.Menu_About, Source={StaticResource LocalizedResources}}">
          <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="Click">
              <behaviors:PickerViewNavigateAction View="About" />
            </interactions:EventTriggerBehavior>
          </interactivity:Interaction.Behaviors>
        </AppBarButton>

      </CommandBar.SecondaryCommands>

    </CommandBar>
  </Page.BottomAppBar>
</Page>